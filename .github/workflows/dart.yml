# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Dart

on:
  push:
    branches:
      - master
      - development
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with: 
          flutter-version: "3.10.3"
          channel: 'stable'
      - name: Install dependencies
        run: flutter pub get
      - name: Build and test
        run: |
          flutter build apk
          flutter test

  deploy_staging:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to Staging
        if: github.event_name == 'push' && github.ref == 'refs/heads/development'
        run: |
          # Add the following dependencies:
          - name: Google Cloud SDK
            uses: google-github-actions/setup-gcloud@v0
          - name: Firebase Admin SDK
            run: npm install -g firebase-admin

          # Build the APK
          flutter build apk

          # Upload the APK to Firebase Test Lab for testing
          gcloud auth activate-service-account --key-file=/Firebase/service-account-key.json
          gcloud firebase test android run \
            --type instrumentation \
            --app build/app/outputs/flutter-apk/app-release.apk \
            --test build/app/outputs/flutter-apk/app.apk \
            --timeout 5m

  deploy_production:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to Production
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: |
          # Install Fastlane
          bundle install
          
          # Authenticate with Google Play
          fastlane supply init --json_key @/path/to/your/google-play-key.json --package_name com.azharproject.quran

          # Upload the APK to Play Store
          fastlane supply --track beta --skip_upload_metadata --skip_upload_images

          # Deploy
          fastlane deploy
